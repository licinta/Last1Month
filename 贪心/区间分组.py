"""
看了一下，貌似是求最大区间厚度的问题。
大家可以把这个问题想象成活动安排问题

有若干个活动，第i个活动开始时间和结束时间是[Si,Fi]，
同一个教室安排的活动之间不能交叠，求要安排所有活动，少需要几个教室？

有时间冲突的活动不能安排在同一间教室，与该问题的限制条件相同，即最小需要的教室个数即为该题答案。

我们可以把所有开始时间和结束时间排序，遇到开始时间就把需要的教室加1，
遇到结束时间就把需要的教室减1,在一系列需要的教室个数变化的过程中，峰值就是多同时进行的活动数，也是我们至少需要的教室数。

...这就是大佬的思路么orz
"""
n = int(input())
li = []
for i in range(n):
    a, b = map(int, input().split())
    li.append([a, 1])
    li.append([b + 1, -1])  # 细节b+1
li.sort()

ans = 1
temp = 0
for i, j in li:
    temp += j
    ans = max(ans, temp)
print(ans)
